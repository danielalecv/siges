#pragma checksum "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Admin\CatalogueRoles.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0ca8c6b5111d57f2b0ae98bf5363c2be7c8194e4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Admin_CatalogueRoles), @"mvc.1.0.view", @"/Views/Admin/CatalogueRoles.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\_ViewImports.cshtml"
using siges;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\_ViewImports.cshtml"
using siges.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Admin\CatalogueRoles.cshtml"
using siges.Areas.Identity.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Admin\CatalogueRoles.cshtml"
using System.Collections.Generic;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Admin\CatalogueRoles.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0ca8c6b5111d57f2b0ae98bf5363c2be7c8194e4", @"/Views/Admin/CatalogueRoles.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4f34ac2a518186cd6e1fad2ab593126982fe1167", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Admin_CatalogueRoles : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 7 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Admin\CatalogueRoles.cshtml"
  
    ViewData["Title"] = "Catálogo Roles";
    List<IdentityRole> model = ViewData["roles"] as List<IdentityRole>;
 

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""container"">
    <div class=""row"">
        <div class=""col"">
            <h2>Cat&aacute;logo de Roles</h2>
        </div>
        <div class=""col align-self-center text-right"">
            <a id=""addRole"" class=""btn btn-success marg-Float float"" data-toggle=""tooltip"" data-placement=""bottom"" title=""Agregar"" data-original-title=""Tooltip on bottom""><i class=""fas fa-plus""></i></a>
        </div>
    </div>
    <div class=""row  justify-content-md-center"">
        <div class=""col align-self-center"">
            <table id=""tableCatRoles"" data-toggle=""table"" data-search=""true"" data-show-columns=""false"" data-pagination=""true"" data-locale=""es-MX"" data-classes=""table table-hover"" data-page-size=""5"" data-page-list=""[5,10,25]"" data-show-footer=""true"" data-sort-name=""role"">
                <thead>
                    <tr>
                        <th data-sortable=""true"" data-field=""role"">Rol</th>
                        <th class=""mobileHidden"">Acciones</th>
                    </tr>
         ");
            WriteLiteral("       </thead>\r\n                <tbody>\r\n");
#nullable restore
#line 31 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Admin\CatalogueRoles.cshtml"
                   foreach(IdentityRole role in model) {
                        if(role.Name != "Admin" && role.Name != "Default"){

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <tr>\r\n                                <td>");
#nullable restore
#line 34 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Admin\CatalogueRoles.cshtml"
                               Write(Html.DisplayFor(modelItem => role.Name));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</td>
                                <td class=""mobileHidden""><a class=""btn btn-success float_Table"" data-toggle=""tooltip"" data-placement=""bottom"" title=""Acciones"" data-original-title=""Tooltip on bottom""><i class=""fab fa-elementor""></i></a></td>
                            </tr>
");
#nullable restore
#line 37 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Admin\CatalogueRoles.cshtml"
                        }
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
<script>
   $(""#addRole"").on(""click"", async ()=>{
    var m = []
    const { value: newRol } = await Swal.fire({
        title: 'Agregar un Rol',
        input: 'text',
        confirmButtonColor: ""#67E7CF"",
        reverseButtons: true,
        showCancelButton: true,
        confirmButtonText:""Guardar"",
        cancelButtonText:""Cancelar"",
        inputPlaceholder: 'Rol de usuario',
        allowOutsideClick: false,
        allowEscapeKey: false,
        showCloseButton: true,
        closeButtonHtml: '<i class=""fas fa-times""></i>',
        inputValidator: (value) => {
          m = /[a-zÀ-ÿ\u00f1\u00d10-9]+/ig.exec(value)
          if(m === null || m.length < 1)
            return;
            return new Promise((resolve) => {
                if (value !== '') {
                    $.ajax({
                        url: apihost + ""/Admin/CreateRole"",
                        method: ""POST"",
                        data: {
                          ""role"":`${m[0]}`,
              ");
                WriteLiteral(@"          },
                        async: true,
                        dataType: ""json"",
                        success: function (respuesta){
                          resolve()
                        }
                    });
                } else {
                    resolve('Necesitas ingresar un nuevo rol');
                }
            });
        }
    });
    if(m !== null){
        Swal.fire({
            icon: 'success',
            title: '¡Éxito!',
            confirmButtonColor: ""#67E7CF"",
            confirmButtonText:""Aceptar"",
            text: `El rol ${m[0]} ha sido creado`,
            onClose: ()=>{
                location.reload(true);
            }
        }).then((result) => {
            if (result.value) {
                location.reload(true);
            }
        })
    }
});


$('#tableCatRoles').on('click-row.bs.table', async (row, $element, field) => {
    const name = field[0].children[0].innerText;
    Swal.fire({
        icon: 'ques");
                WriteLiteral(@"tion',
        title: `${name}`,
        text: `¿Qué deseas hacer?`,
        reverseButtons: true,
        showCancelButton: true,
        confirmButtonText:""Editar"",
        cancelButtonText:""Eliminar"",
        confirmButtonColor: ""#67E7CF"",
        cancelButtonColor:""#E74C3C"",
        allowOutsideClick: false,
        allowEscapeKey: false,
        showCloseButton: true,
        closeButtonHtml: '<i class=""fas fa-times""></i>',
    }).then((result) => {
        if (result.value) {
            (async () => {
                const { value: editRole } = await Swal.fire({
                    title: 'Editar un Rol',
                    input: 'text',
                    inputValue: `${name}`,
                    confirmButtonColor: ""#67E7CF"",
                    reverseButtons: true,
                    showCancelButton: true,
                    confirmButtonText:""Guardar"",
                    cancelButtonText:""Cancelar"",
                    inputPlaceholder: 'Rol de usuario',
         ");
                WriteLiteral(@"           inputValidator: (value) => {
                        return new Promise((resolve) => {
                            if (value !== '') {
                                $.ajax({
                                    url: apihost + ""/Admin/EditRole"",
                                    method: ""POST"",
                                    data: {
                                      ""newName"":`${value}`,
                                      ""oldName"":`${name}`
                                    },
                                    async: true,
                                    dataType: ""json"",
                                    success: function (respuesta){
                                      resolve()
                                    }
                                });
                            } else {
                                resolve('Necesitas ingresar el nombre del rol');
                            }
                        });
                    }
   ");
                WriteLiteral(@"             })
                if(editRole){
                    Swal.fire({
                        icon: 'success',
                        title: '¡Éxito!',
                        confirmButtonColor: ""#67E7CF"",
                        confirmButtonText:""Aceptar"",
                        text: `El rol ${name} ha sido modificado a ${editRole}`,
                        onClose: ()=>{
                            location.reload(true);
                        }
                    }).then((result) => {
                        if (result.value) {
                            location.reload(true);
                        }
                    })
                }
            })();
        }
        else if(result.dismiss === Swal.DismissReason.cancel){
            Swal.fire({
                icon: 'error',
                title: `${name} se eliminará`,
                text: `¿Seguro que deseas eliminarlo?`,
                reverseButtons: true,
                showCancelButton: true,
 ");
                WriteLiteral(@"               confirmButtonText:""Si, Eliminar"",
                cancelButtonText:""No, Cancelar"",
                confirmButtonColor:""#E74C3C"",
                cancelButtonColor: ""#67E7CF"",
                allowOutsideClick: false,
                allowEscapeKey: false,
                showCloseButton: true,
                closeButtonHtml: '<i class=""fas fa-times""></i>',
            }).then((result) => {
                if(result.value){
                    $.ajax({
                        url: apihost + ""/Admin/DeleteRole"",
                        method: ""POST"",
                        data: {
                          ""name"":`${name}`
                        },
                        async: true,
                        dataType: ""json"",
                        success: function (respuesta){
                            Swal.fire({
                                icon: 'success',
                                title: '¡Éxito!',
                                confirmButtonColor: ""#6");
                WriteLiteral(@"7E7CF"",
                                confirmButtonText:""Aceptar"",
                                text: `El rol ${name} ha sido eliminado`,
                                onClose: ()=>{
                                    location.reload(true);
                                }
                            }).then((result) => {
                                if (result.value) {
                                    location.reload(true);
                                }
                            })
                        }
                    });
                }
                else{
                    Swal.Close();
                }
            });
        }
    })
});
</script>
");
            }
            );
            WriteLiteral("\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public RoleManager<IdentityRole> roleManager { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public UserManager<RoatechIdentityUser> UserManager { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591

#pragma checksum "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9f7052b1b64010f4aef57d31185b0d26945ea49a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Clientes_Contacts), @"mvc.1.0.view", @"/Views/Clientes/Contacts.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\_ViewImports.cshtml"
using siges;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\_ViewImports.cshtml"
using siges.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\_ViewImports.cshtml"
using siges.Areas.Identity.Data;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9f7052b1b64010f4aef57d31185b0d26945ea49a", @"/Views/Clientes/Contacts.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4f34ac2a518186cd6e1fad2ab593126982fe1167", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Clientes_Contacts : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<siges.Models.Persona>>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml"
  
    ViewData["Title"] = "Contactos";

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml"
Write(Html.AntiForgeryToken());

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <h2>Contactos de ");
#nullable restore
#line 10 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml"
                        Write(ViewData["Cliente"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h2>\r\n        </div>\r\n        <div class=\"col align-self-center text-right\">\r\n            <a class=\"btn bg-blue margR-30px float\"");
            BeginWriteAttribute("href", " href=\'", 369, "\'", 408, 1);
#nullable restore
#line 13 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml"
WriteAttributeValue("", 376, Url.Action("Index", "Clientes"), 376, 32, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" data-toggle=""tooltip"" data-placement=""bottom"" title=""Regresar"" data-original-title=""Tooltip on bottom""><i class=""fas fa-arrow-left""></i></a>
            <a onclick=""btnAdd()"" class=""btn btn-success marg-Float float"" data-toggle=""tooltip"" data-placement=""bottom"" title=""Agregar"" data-original-title=""Tooltip on bottom""><i class=""fas fa-plus""></i></a>
        </div>
    </div>
    <div class=""row"">
        <div class=""col margBott4em"">
            <table id=""tableContactsClients"" data-toggle=""table"" data-search=""true"" data-show-columns=""false"" data-pagination=""true"" data-locale=""es-MX"" data-classes=""table table-hover"" data-page-size=""5"" data-page-list=""[5,10,25]"" data-show-footer=""true"" data-sort-name=""name"">
                <thead>
                    <tr>
                        <th data-visible=""false"" data-field=""id""></th>
                        <th data-sortable=""true"" data-field=""name"">Contacto</th>
                        <th data-sortable=""true"">Estatus</th>
                        <th data-");
            WriteLiteral(@"sortable=""true"">Correo Electr&oacute;nico</th>
                        <th data-sortable=""true"">Tel&eacute;fono</th>
                        <th class=""mobileHidden"">Acciones</th>
                    </tr>
                </thead>
                <tbody>
");
#nullable restore
#line 31 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml"
                     foreach (var item in Model)
                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                        <tr>\r\n                            <td>");
#nullable restore
#line 34 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml"
                           Write(Html.DisplayFor(modelItem => item.Id));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                            <td>");
#nullable restore
#line 35 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml"
                           Write(Html.DisplayFor(modelItem => item.Nombre));

#line default
#line hidden
#nullable disable
            WriteLiteral(" ");
#nullable restore
#line 35 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml"
                                                                      Write(Html.DisplayFor(modelItem => item.Paterno));

#line default
#line hidden
#nullable disable
            WriteLiteral(" ");
#nullable restore
#line 35 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml"
                                                                                                                  Write(Html.DisplayFor(modelItem => item.Materno));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n");
#nullable restore
#line 36 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml"
                             if (item.Estatus == true)
                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <td>Confirmado</td>\r\n");
#nullable restore
#line 39 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml"
                            }
                            else{

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <td>No confirmado</td>\r\n");
#nullable restore
#line 42 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml"
                            }

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <td>");
#nullable restore
#line 43 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml"
                           Write(Html.DisplayFor(modelItem => item.Email));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                            <td>");
#nullable restore
#line 44 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml"
                           Write(Html.DisplayFor(modelItem => item.Telefono));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</td>
                            <td class=""mobileHidden"">
                                <a class=""btn btn-success float_Table"" data-toggle=""tooltip"" data-placement=""bottom"" title=""Acciones"" data-original-title=""Tooltip on bottom""><i class=""fab fa-elementor""></i></a>

                            </td>
                        </tr>
");
#nullable restore
#line 50 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml"

                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n    <script>\r\n        const btnAdd = () => {\r\n            const id = ");
#nullable restore
#line 62 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml"
                  Write(Html.Raw(Json.Serialize(ViewData["ID"])));

#line default
#line hidden
#nullable disable
                WriteLiteral(@";
            const token = $(""[name='__RequestVerificationToken']"").val();
            Swal.fire({
                title: ""Nuevo Contacto"",
                confirmButtonColor: ""#67E7CF"",
                confirmButtonText: ""Guardar"",
                cancelButtonText: ""Cancelar"",
                reverseButtons: true,
                showCancelButton: true,
                allowOutsideClick: false,
                allowEscapeKey: false,
                showCloseButton: true,
                closeButtonHtml: '<i class=""fas fa-times""></i>',
                html: `
                        <div class=""form-group text-left"">
                            <label class=""control-label"">Nombre *</label>
                            <input id=""txtNombre"" type=""text"" class=""form-control"" maxlength=""30"" />
                        </div>
                        <div class=""form-row"">
                            <div class=""form-group col-6 text-left"">
                                <label class=""control-la");
                WriteLiteral(@"bel"">Apellido Paterno *</label>
                                <input id=""txtPaterno"" type=""text"" class=""form-control"" maxlength=""30"" />
                            </div>
                            <div class=""form-group col-6 text-left"">
                                <label class=""control-label"">Apellido Materno *</label>
                                <input id=""txtMaterno"" type=""text"" class=""form-control"" maxlength=""30"" />
                            </div>
                        </div>
                        <div class=""form-group text-left"">
                            <label class=""control-label"">Correo Electrónico *</label>
                            <input id=""txtEmail"" type=""email"" class=""form-control"" />
                        </div>
                        <div class=""form-row"">
                            <div class=""form-group col-6 text-left"">
                                <label class=""control-label"">Teléfono *</label>
                                <input id=""txtTel");
                WriteLiteral(@"efono"" type=""text"" class=""form-control"" maxlength=""10"" placeholder=""Ej: 5556058941"" />
                            </div>
                            <div class=""form-group col-6 text-left"">
                                <label class=""control-label"">Teléfono Opcional</label>
                                <input id=""txtTelefonoOp"" type=""text"" class=""form-control"" maxlength=""10"" placeholder=""Ej: 5556058941"" />
                            </div>
                        </div>
                        <div class=""form-row"">
                            <div class=""form-group col-6 text-left"">
                                <label class=""control-label"">Campo Opcional</label>
                                <input id=""txtOp1"" type=""text"" class=""form-control"" maxlength=""100"" />
                            </div>
                            <div class=""form-group col-6 text-left"">
                                <label class=""control-label"">Campo Opcional</label>
                                <inpu");
                WriteLiteral(@"t id=""txtOp2"" type=""text"" class=""form-control"" maxlength=""100"" />
                            </div>
                        </div>
                    `,
                onOpen: () => {
                    $(""#txtTelefono"").keypress(evt => {
                        if (evt.which != 8 && evt.which != 0 && evt.which < 48 || evt.which > 57) {
                            evt.preventDefault();
                        }
                    });
                    $(""#txtTelefonoOp"").keypress(evt => {
                        if (evt.which != 8 && evt.which != 0 && evt.which < 48 || evt.which > 57) {
                            evt.preventDefault();
                        }
                    });
                    $(""input[type='text']"").attr(""onkeyup"", 'this.value = this.value.toUpperCase();');
                },
                preConfirm: () => {
                    if ($(""#txtNombre"").val().length === 0) {
                        $(""#txtNombre"").attr(""style"", ""border-color: #f27474!importa");
                WriteLiteral(@"nt;box-shadow: 0 0 2px #f27474!important;"");
                    }
                    else {
                        $(""#txtNombre"").removeAttr(""style"");
                    }
                    if ($(""#txtPaterno"").val().length === 0) {
                        $(""#txtPaterno"").attr(""style"", ""border-color: #f27474!important;box-shadow: 0 0 2px #f27474!important;"");
                    }
                    else {
                        $(""#txtPaterno"").removeAttr(""style"");
                    }
                    if ($(""#txtMaterno"").val().length === 0) {
                        $(""#txtMaterno"").attr(""style"", ""border-color: #f27474!important;box-shadow: 0 0 2px #f27474!important;"");
                    }
                    else {
                        $(""#txtMaterno"").removeAttr(""style"");
                    }
                    if ($(""#txtEmail"").val().length === 0) {
                        $(""#txtEmail"").attr(""style"", ""border-color: #f27474!important;box-shadow: 0 0 2px #f27474!im");
                WriteLiteral("portant;\");\r\n                    }\r\n                    else if (!$(\"#txtEmail\").val().match(/^([\\w-\\.]+");
                WriteLiteral(@"@([\w-]+\.)+[\w-]{2,4})?$/)) {
                        $(""#txtEmail"").attr(""style"", ""border-color: #f27474!important;box-shadow: 0 0 2px #f27474!important;"");
                    }
                    else {
                        $(""#txtEmail"").removeAttr(""style"");
                    }
                    if ($(""#txtTelefono"").val().length === 0 || !$(""#txtTelefono"").val().match(/^(\(\+?\d{2,3}\)[\*|\s|\-|\.]?(([\d][\*|\s|\-|\.]?){6})(([\d][\s|\-|\.]?){2})?|(\+?[\d][\s|\-|\.]?){8}(([\d][\s|\-|\.]?){2}(([\d][\s|\-|\.]?){2})?)?)$/)) {
                        $(""#txtTelefono"").attr(""style"", ""border-color: #f27474!important;box-shadow: 0 0 2px #f27474!important;"");
                    }
                    else {
                        $(""#txtTelefono"").removeAttr(""style"");
                    }

                    if ($(""#txtTelefono"").val().length === 0 || $(""#txtTelefono"").val().length < 10) {
                        Swal.showValidationMessage(""El teléfono es incorrecto"");
                 ");
                WriteLiteral("   }\r\n                    if (!$(\"#txtEmail\").val().match(/^([\\w-\\.]+");
                WriteLiteral(@"@([\w-]+\.)+[\w-]{2,4})?$/)) {
                        Swal.showValidationMessage(""El correo electrónico es incorrecto"");
                    }
                    if ($(""#txtNombre"").val().length === 0 || $(""#txtPaterno"").val().length === 0 || $(""#txtMaterno"").val().length === 0 || $(""#txtEmail"").val().length === 0 || $(""#txtTelefono"").val().length === 0) {
                        Swal.showValidationMessage(""Algún campo obligatorio está vacío"");
                    }
                }
            }).then(result => {
                dataCompleta1 = {
                    __RequestVerificationToken: token,
                    ccDTO: {
                        clienteId: id,
                        contactos: [{
                            Nombre: $(""#txtNombre"").val(),
                            Paterno: $(""#txtPaterno"").val(),
                            Materno: $(""#txtMaterno"").val(),
                            Email: $(""#txtEmail"").val(),
                            Telefono: $(""#txtTelefo");
                WriteLiteral(@"no"").val(),
                            TelefonoContacto: $(""#txtTelefonoOp"").val(),
                            Opcional1: $(""#txtOp1"").val(),
                            Opcional2: $(""#txtOp2"").val(),
                        }]
                    }
                }
                if (result.value) {
                    $.ajax({
                        url: '");
#nullable restore
#line 192 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml"
                         Write(Url.Action("Create","ContactoCliente"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                        method: ""POST"",
                        data: dataCompleta1,
                        async: true,
                        dataType: ""json"",
                        success: res => {
                            if (res.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: '¡Éxito!',
                                    confirmButtonColor: ""#67E7CF"",
                                    confirmButtonText: ""Aceptar"",
                                    text: `El contacto se registro con éxito`,
                                    onClose: () => {
                                        location.reload(true);
                                    }
                                }).then(result => {
                                    if (result.value) {
                                        location.reload(true);
                                    }
                      ");
                WriteLiteral(@"          });
                            }
                        }
                    });
                }
                else {
                    Swal.close();
                }
            });
        }

        const btnEdit = element => {
            const id = ");
#nullable restore
#line 224 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml"
                  Write(Html.Raw(Json.Serialize(ViewData["ID"])));

#line default
#line hidden
#nullable disable
                WriteLiteral(";\r\n            const token = $(\"[name=\'__RequestVerificationToken\']\").val();\r\n            $.ajax({\r\n                url: \'");
#nullable restore
#line 227 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml"
                 Write(Url.Action("ccDetail","ContactoCliente"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                method: ""GET"",
                data: {
                    Contactoid: element.id
                },
                async: true,
                dataType: ""json"",
                success: data => {
                    console.log(data);
                    if (data.success) {
                        Swal.fire({
                            title: ""Editar Contacto"",
                            confirmButtonColor: ""#67E7CF"",
                            confirmButtonText: ""Guardar"",
                            cancelButtonText: ""Cancelar"",
                            reverseButtons: true,
                            showCancelButton: true,
                            allowOutsideClick: false,
                            allowEscapeKey: false,
                            showCloseButton: true,
                            closeButtonHtml: '<i class=""fas fa-times""></i>',
                            html: `
                                        <div class=""form-group text-l");
                WriteLiteral(@"eft"">
                                            <label class=""control-label"">Nombre </label>
                                            <input id=""txtNombre"" type=""text"" class=""form-control"" value=""${data.data.nombre}"" maxlength=""30"" />
                                        </div>
                                        <div class=""form-row"">
                                            <div class=""form-group col-6 text-left"">
                                                <label class=""control-label"">Apellido Paterno </label>
                                                <input id=""txtPaterno"" type=""text"" class=""form-control"" value=""${data.data.paterno}"" maxlength=""30"" />
                                            </div>
                                            <div class=""form-group col-6 text-left"">
                                                <label class=""control-label"">Apellido Materno </label>
                                                <input id=""txtMaterno"" type=""text"" cl");
                WriteLiteral(@"ass=""form-control"" value=""${data.data.materno}"" maxlength=""30"" />
                                            </div>
                                        </div>
                                        <div class=""form-group text-left"">
                                            <label class=""control-label"">Correo Electrónico </label>
                                            <input id=""txtEmail"" type=""email"" class=""form-control"" value=""${data.data.email}"" />
                                        </div>
                                        <div class=""form-row"">
                                            <div class=""form-group col-6 text-left"">
                                                <label class=""control-label"">Teléfono *</label>
                                                <input id=""txtTelefono"" type=""text"" class=""form-control"" value=""${data.data.telefono}"" maxlength=""10"" placeholder=""Ej: 5556058941"" />
                                            </div>
                   ");
                WriteLiteral(@"                         <div class=""form-group col-6 text-left"">
                                                <label class=""control-label"">Teléfono Opcional</label>
                                                <input id=""txtTelefonoOp"" type=""text"" class=""form-control"" value=""${(data.data.telefonoContacto === null) ? """" : data.data.telefonoContacto}"" maxlength=""10"" placeholder=""Ej: 5556058941"" />
                                            </div>
                                        </div>
                                        <div class=""form-row"">
                                            <div class=""form-group col-6 text-left"">
                                                <label class=""control-label"">Campo Opcional</label>
                                                <input id=""txtOp1"" type=""text"" class=""form-control"" value=""${(data.data.opcional1 === null) ? """" : data.data.opcional1}"" maxlength=""100"" />
                                            </div>
                       ");
                WriteLiteral(@"                     <div class=""form-group col-6 text-left"">
                                                <label class=""control-label"">Campo Opcional</label>
                                                <input id=""txtOp2"" type=""text"" class=""form-control"" value=""${(data.data.opcional2 === null) ? """" : data.data.opcional2}"" maxlength=""100"" />
                                            </div>
                                        </div>
                                    `,
                            onOpen: () => {
                                $(""#txtTelefono"").keypress(evt => {
                                    if (evt.which != 8 && evt.which != 0 && evt.which < 48 || evt.which > 57) {
                                        evt.preventDefault();
                                    }
                                });
                                $(""#txtTelefonoOp"").keypress(evt => {
                                    if (evt.which != 8 && evt.which != 0 && evt.which < 48 || ");
                WriteLiteral(@"evt.which > 57) {
                                        evt.preventDefault();
                                    }
                                });
                                $(""input[type='text']"").attr(""onkeyup"", 'this.value = this.value.toUpperCase();');
                            },
                            preConfirm: () => {
                                if ($(""#txtNombre"").val().length === 0) {
                                    $(""#txtNombre"").attr(""style"", ""border-color: #f27474!important;box-shadow: 0 0 2px #f27474!important;"");
                                }
                                else {
                                    $(""#txtNombre"").removeAttr(""style"");
                                }
                                if ($(""#txtPaterno"").val().length === 0) {
                                    $(""#txtPaterno"").attr(""style"", ""border-color: #f27474!important;box-shadow: 0 0 2px #f27474!important;"");
                                }
              ");
                WriteLiteral(@"                  else {
                                    $(""#txtPaterno"").removeAttr(""style"");
                                }
                                if ($(""#txtMaterno"").val().length === 0) {
                                    $(""#txtMaterno"").attr(""style"", ""border-color: #f27474!important;box-shadow: 0 0 2px #f27474!important;"");
                                }
                                else {
                                    $(""#txtMaterno"").removeAttr(""style"");
                                }
                                if ($(""#txtEmail"").val().length === 0) {
                                    $(""#txtEmail"").attr(""style"", ""border-color: #f27474!important;box-shadow: 0 0 2px #f27474!important;"");
                                }
                                else if (!$(""#txtEmail"").val().match(/^([\w-\.]+");
                WriteLiteral(@"@([\w-]+\.)+[\w-]{2,4})?$/)) {
                                    $(""#txtEmail"").attr(""style"", ""border-color: #f27474!important;box-shadow: 0 0 2px #f27474!important;"");
                                }
                                else {
                                    $(""#txtEmail"").removeAttr(""style"");
                                }
                                if ($(""#txtTelefono"").val().length === 0 || !$(""#txtTelefono"").val().match(/^(\(\+?\d{2,3}\)[\*|\s|\-|\.]?(([\d][\*|\s|\-|\.]?){6})(([\d][\s|\-|\.]?){2})?|(\+?[\d][\s|\-|\.]?){8}(([\d][\s|\-|\.]?){2}(([\d][\s|\-|\.]?){2})?)?)$/)) {
                                    $(""#txtTelefono"").attr(""style"", ""border-color: #f27474!important;box-shadow: 0 0 2px #f27474!important;"");
                                }
                                else {
                                    $(""#txtTelefono"").removeAttr(""style"");
                                }

                                if ($(""#txtTelefono"").val().length === ");
                WriteLiteral("0 || $(\"#txtTelefono\").val().length < 10) {\r\n                                    Swal.showValidationMessage(\"El teléfono es incorrecto\");\r\n                                }\r\n                                if (!$(\"#txtEmail\").val().match(/^([\\w-\\.]+");
                WriteLiteral(@"@([\w-]+\.)+[\w-]{2,4})?$/)) {
                                    Swal.showValidationMessage(""El correo electrónico es incorrecto"");
                                }
                                if ($(""#txtNombre"").val().length === 0 || $(""#txtPaterno"").val().length === 0 || $(""#txtMaterno"").val().length === 0 || $(""#txtEmail"").val().length === 0 || $(""#txtTelefono"").val().length === 0) {
                                    Swal.showValidationMessage(""Algún campo obligatorio está vacío"");
                                }
                            }
                        }).then(result => {
                            if (result.value) {
                                $.ajax({
                                    url: '");
#nullable restore
#line 349 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml"
                                     Write(Url.Action("Edit","ContactoCliente"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                                    method: ""POST"",
                                    data: {
                                        __RequestVerificationToken: token,
                                        id: element.id,
                                        ccDTO: {
                                            clienteId: id,
                                            contactos: [{
                                                Nombre: $(""#txtNombre"").val(),
                                                Paterno: $(""#txtPaterno"").val(),
                                                Materno: $(""#txtMaterno"").val(),
                                                Email: $(""#txtEmail"").val(),
                                                Telefono: $(""#txtTelefono"").val(),
                                                TelefonoContacto: $(""#txtTelefonoOp"").val(),
                                                Opcional1: $(""#txtOp1"").val(),
                                        ");
                WriteLiteral(@"        Opcional2: $(""#txtOp2"").val(),
                                            }]
                                        }
                                    },
                                    async: true,
                                    dataType: ""json"",
                                    success: res => {
                                        console.log({ res });
                                        if (res) {
                                            Swal.fire({
                                                icon: 'success',
                                                title: '¡Éxito!',
                                                confirmButtonColor: ""#67E7CF"",
                                                confirmButtonText: ""Aceptar"",
                                                text: `El contacto se modificó con éxito`,
                                                onClose: () => {
                                                    location.reload(tru");
                WriteLiteral(@"e);
                                                }
                                            }).then(result => {
                                                if (result.value) {
                                                    location.reload(true);
                                                }
                                            });
                                        }
                                    }
                                });
                            }
                            else {
                                Swal.close();
                            }
                        });
                    }
                }, error: error => {
                    console.log(error);
                }
            });
        }

        const btnDelete = element => {
            const token = $(""[name='__RequestVerificationToken']"").val();
            Swal.fire({
                icon: 'error',
                title: `${element.name} se");
                WriteLiteral(@" eliminará`,
                text: `¿Seguro que deseas eliminarlo?`,
                reverseButtons: true,
                showCancelButton: true,
                confirmButtonText: ""Si, Eliminar"",
                cancelButtonText: ""No, Cancelar"",
                confirmButtonColor: ""#E74C3C"",
                cancelButtonColor: ""#67E7CF"",
                allowOutsideClick: false,
                allowEscapeKey: false,
                showCloseButton: true,
                closeButtonHtml: '<i class=""fas fa-times""></i>'
            }).then(result => {
                if (result.value) {
                    $.ajax({
                        url: '");
#nullable restore
#line 421 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml"
                         Write(Url.Action("Delete","ContactoCliente"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                        method: ""POST"",
                        data: {
                            __RequestVerificationToken: token,
                            id: element.id
                        },
                        async: true,
                        dataType: ""json"",
                        success: res => {
                            if (res) {
                                Swal.fire({
                                    icon: 'success',
                                    title: '¡Éxito!',
                                    confirmButtonColor: ""#67E7CF"",
                                    confirmButtonText: ""Aceptar"",
                                    text: `El cliente ${element.name} ha sido eliminado`,
                                    onClose: () => { location.reload(true); }
                                }).then(result => {
                                    if (result.value) {
                                        location.reload(true);
             ");
                WriteLiteral(@"                       }
                                });
                            }
                        }
                    });
                }
                else {
                    Swal.close();
                }
            });
        }


        $('#tableContactsClients').on('click-row.bs.table', (row, element, field) => {
            const token = $(""[name='__RequestVerificationToken']"").val();
            Swal.fire({
                title: `Contacto: ${element.name}`,
                text: ` Seleccione una acción`,
                showCancelButton: true,
                cancelButtonText: ""Cancelar"",
                cancelButtonColor: ""#67E7CF"",
                allowOutsideClick: false,
                allowEscapeKey: false,
                showCloseButton: true,
                closeButtonHtml: '<i class=""fas fa-times""></i>',
                html: `
                        <div class=""form-row margTop40"">
                                <div class=""form-gro");
                WriteLiteral(@"up col"">
                                    <a onclick=""btnEdit({'id':'${element.id}', 'name':'${element.name}'})"" class=""btn btn-success float"" data-toggle=""tooltip"" data-placement=""bottom"" title=""Editar"" data-original-title=""Tooltip on bottom""><i class=""fas fa-edit""></i></a>
                                    <label class=""d-block margTop5px"">Editar</label>
                                </div>
");
#nullable restore
#line 472 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml"
         if (!User.IsInRole("Ventas"))
        {

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                                    <div class=""form-group col"">
                                        <a onclick=""btnDelete({'id':'${element.id}', 'name':'${element.name}'})"" class=""btn btn-success float"" data-toggle=""tooltip"" data-placement=""bottom"" title=""Eliminar"" data-original-title=""Tooltip on bottom""><i class=""fas fa-trash""></i></a>
                                        <label class=""d-block margTop5px"">Eliminar</label>
                                    </div>
");
#nullable restore
#line 478 "C:\Users\HP EliteBook 2570p\source\repos\siges\siges\Views\Clientes\Contacts.cshtml"
        }

#line default
#line hidden
#nullable disable
                WriteLiteral("                        </div>\r\n                        `\r\n            });\r\n        });\r\n\r\n    </script>\r\n");
            }
            );
            WriteLiteral("\r\n\r\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<siges.Models.Persona>> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591

@model IEnumerable<siges.Models.LineaNegocio>

@{
    ViewData["Title"] = "Líneas de Negocio";
}

@Html.AntiForgeryToken()
<div class="container">
    <div class="row">
        <div class="col">
            <h2>L&iacute;neas de Negocio</h2>
        </div>
        <div class="col align-self-center text-right">
            <a onclick="btnAdd()" class="btn btn-success marg-Float float" data-toggle="tooltip" data-placement="bottom" title="Agregar" data-original-title="Tooltip on bottom"><i class="fas fa-plus"></i></a>
        </div>
    </div>
    <div class="row">
        <div class="col margBott4em">
            <table id="tableIndexLineasNegocio" data-toggle="table" data-search="true" data-show-columns="false" data-pagination="true" data-locale="es-MX" data-classes="table table-hover" data-page-size="5"  data-page-list="[5,10,25]" data-show-footer="true" data-sort-name="name">
                <thead>
                    <tr>
                        <th data-visible="false" data-field="id"></th>
                        <th data-sortable="true" data-field="name">@Html.DisplayNameFor(model => model.Nombre)</th>
                        <th class="mobileHidden">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model) {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Id)</td>
                            <td>@Html.DisplayFor(modelItem => item.Nombre)</td>
                            <td class="mobileHidden">
                                <a class="btn btn-success float_Table" data-toggle="tooltip" data-placement="bottom" title="Acciones" data-original-title="Tooltip on bottom"><i class="fab fa-elementor"></i></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section scripts{
<script>
    const btnAdd = () => {
        const token = $("[name='__RequestVerificationToken']").val();
        Swal.fire({
            title: "Nueva Línea de Negocio",
            confirmButtonColor: "#67E7CF",
            confirmButtonText:"Guardar",
            cancelButtonText:"Cancelar",
            reverseButtons: true,
            showCancelButton: true,
            allowOutsideClick: false,
            allowEscapeKey: false,
            showCloseButton: true,
            closeButtonHtml: '<i class="fas fa-times"></i>',
            html:`
                <div class="form-group text-left">
                    <label class="control-label">L&iacute;nea de Negocio *</label>
                    <input id="txtNombre" type="text" class="form-control" />
                </div>
                <div class="form-group text-left">
                    <label class="control-label">Campo Opcional</label>
                    <input id="txtOp1" type="text" class="form-control" />
                </div>
                <div class="form-group text-left">
                    <label class="control-label">Campo Opcional</label>
                    <input id="txtOp2" type="text" class="form-control" />
                </div>
                <div class="form-group text-right">
                    <small>* Campos obligatorios</small>
                </div>
            `,
            onOpen: ()=>{
                $("input[type='text']").attr("onkeyup",'this.value = this.value.toUpperCase();');
            },
            preConfirm: () =>{
                if($("#txtNombre").val().length === 0){
                    $("#txtNombre").attr("style", "border-color: #f27474!important;box-shadow: 0 0 2px #f27474!important;");
                }
                else{
                    $("#txtNombre").removeAttr("style");
                }
                if($("#txtNombre").val().length === 0){
                    Swal.showValidationMessage("Algún campo obligatorio está vacío");
                }
            }
        }).then(result =>{
            if(result.value){
                $.ajax({
                    url: '@Url.Action("IfLineaNegocioExists","Rest")',
                    method: "GET",
                    data: {
                        nombre:$("#txtNombre").val()
                    },
                    async: true,
                    dataType: "json",
                    success: function (res){
                        if(res){
                            Swal.fire({
                                icon: 'error',
                                title: '¡Error!',
                                confirmButtonColor: "#67E7CF",
                                confirmButtonText:"Aceptar",
                                text: `La Línea de Negocio ya existe`
                            });
                        }
                        else{
                            $.ajax({
                                url: '@Url.Action("Create","LineaNegocios")',
                                method: "POST",
                                data: {
                                    __RequestVerificationToken: token,
                                    lineaNegocio:{
                                        Nombre:$("#txtNombre").val(),
                                        Estatus: true,
                                        Opcional1: $("#txtOp1").val(),
                                        Opcional2: $("#txtOp2").val(),
                                    }
                                },
                                async: true,
                                dataType: "json",
                                success: function (res){
                                    if(res.success){
                                        Swal.fire({
                                            icon: 'success',
                                            title: '¡Éxito!',
                                            confirmButtonColor: "#67E7CF",
                                            confirmButtonText:"Aceptar",
                                            text: `La Línea de Negocio se registró con éxito`,
                                            onClose: ()=>{
                                                location.reload(true);
                                            }
                                        }).then((result) => {
                                            if (result.value) {
                                                location.reload(true);
                                            }
                                        });
                                    }
                                }
                            });
                        }
                    }
                });
            }
            else{
                Swal.close();
            }
        });
    }

    const btnDetails = element => {
        $.ajax({
            url: '@Url.Action("Details","LineaNegocios")',
            method: "GET",
            data: {
                id: element.id
            },
            async: true,
            dataType: "json",
            success: function (data){
                if(data.success){
                    Swal.fire({
                        title:"Detalles",
                        confirmButtonColor: "#67E7CF",
                        confirmButtonText:"Aceptar",
                        html:`
                            <div class="form-group text-left">
                                <label class="control-label">L&iacute;nea de Negocio</label>
                                <input type="text" class="form-control" value="${(data.data.nombre===null)?"":data.data.nombre}" readonly/>
                            </div>
                            <div class="form-group text-left">
                                <label class="control-label">Campo Opcional</label>
                                <input type="text" class="form-control" value="${(data.data.opcional1 === null)?"":data.data.opcional1}" readonly/>
                            </div>
                            <div class="form-group text-left">
                                <label class="control-label">Campo Opcional</label>
                                <input type="text" class="form-control" value="${(data.data.opcional2 === null)?"":data.data.opcional2}" readonly/>
                            </div>
                        `
                    });
                }
            }
        });
    }

    const btnEdit = element => {
        const token = $("[name='__RequestVerificationToken']").val();
        $.ajax({
            url: '@Url.Action("Details","LineaNegocios")',
            method: "GET",
            data: {
                id: element.id
            },
            async: true,
            dataType: "json",
            success: function (data){
                if(data.success){
                    Swal.fire({
                        title: "Editar Línea de Negocio",
                        confirmButtonColor: "#67E7CF",
                        confirmButtonText:"Guardar",
                        cancelButtonText:"Cancelar",
                        reverseButtons: true,
                        showCancelButton: true,
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        showCloseButton: true,
                        closeButtonHtml: '<i class="fas fa-times"></i>',
                        html:`
                            <div class="form-group text-left">
                                <label class="control-label">L&iacute;nea de Negocio *</label>
                                <input id="txtNombre" type="text" class="form-control" value="${(data.data.nombre===null)?"":data.data.nombre}" />
                            </div>
                            <div class="form-group text-left">
                                <label class="control-label">Campo Opcional</label>
                                <input id="txtOp1" type="text" class="form-control" value="${(data.data.opcional1 === null)?"":data.data.opcional1}" />
                            </div>
                            <div class="form-group text-left">
                                <label class="control-label">Campo Opcional</label>
                                <input id="txtOp2" type="text" class="form-control" value="${(data.data.opcional2 === null)?"":data.data.opcional2}" />
                            </div>
                            <div class="form-group text-right">
                                <small>* Campos obligatorios</small>
                            </div>
                        `,
                        onOpen: ()=>{
                            $("input[type='text']").attr("onkeyup",'this.value = this.value.toUpperCase();');
                        },
                        preConfirm: () =>{
                            if($("#txtNombre").val() === ""){
                                $("#txtNombre").attr("style", "border-color: #f27474!important;box-shadow: 0 0 2px #f27474!important;");
                            }
                            else{
                                $("#txtNombre").removeAttr("style");
                            }
                            if($("#txtNombre").val() === ""){
                                Swal.showValidationMessage("Algún campo obligatorio está vacío");
                            }
                        }
                    }).then(result =>{
                        if(result.value){
                            $.ajax({
                                url: '@Url.Action("Edit","LineaNegocios")',
                                method: "POST",
                                data: {
                                    __RequestVerificationToken: token,
                                    id: element.id,
                                    lineaNegocio:{
                                        Id:element.id,
                                        Nombre:$("#txtNombre").val(),
                                        Estatus: true,
                                        Opcional1: $("#txtOp1").val(),
                                        Opcional2: $("#txtOp2").val(),
                                    }
                                },
                                async: true,
                                dataType: "json",
                                success: function (res){
                                    if(res.success){
                                        Swal.fire({
                                            icon: 'success',
                                            title: '¡Éxito!',
                                            confirmButtonColor: "#67E7CF",
                                            confirmButtonText:"Aceptar",
                                            text: `La Línea de Negocio ${element.name} ha sido modificada`,
                                            onClose: ()=>{
                                                location.reload(true);
                                            }
                                        }).then((result) => {
                                            if (result.value) {
                                                location.reload(true);
                                            }
                                        });
                                    }
                                }
                            });
                        }
                        else{
                            Swal.close();
                        }
                    });
                }
            }
        });
    }

    const btnDelete = element => {
        const token = $("[name='__RequestVerificationToken']").val();
        Swal.fire({
            icon: 'error',
            title: `La Línea de Negocio ${element.name} se eliminará`,
            text: `¿Seguro que deseas eliminarlo?`,
            reverseButtons: true,
            showCancelButton: true,
            confirmButtonText:"Si, Eliminar",
            cancelButtonText:"No, Cancelar",
            confirmButtonColor:"#E74C3C",
            cancelButtonColor: "#67E7CF",
            allowOutsideClick: false,
            allowEscapeKey: false,
            showCloseButton: true,
            closeButtonHtml: '<i class="fas fa-times"></i>'
        }).then((result) => {
            if(result.value){
                $.ajax({
                    url: '@Url.Action("Delete","LineaNegocios")',
                    method: "POST",
                    data: {
                        __RequestVerificationToken: token,
                        id: element.id
                    },
                    async: true,
                    dataType: "json",
                    success: function (res){
                        if(res.success){
                            Swal.fire({
                                icon: 'success',
                                title: '¡Éxito!',
                                confirmButtonColor: "#67E7CF",
                                confirmButtonText:"Aceptar",
                                text: `La Línea de Negocio ${element.name} ha sido eliminada`,
                                onClose: ()=>{
                                    location.reload(true);
                                }
                            }).then((result) => {
                                if (result.value) {
                                    location.reload(true);
                                }
                            });
                        }
                    }
                });
            }
            else{
                Swal.close();
            }
        });
    }

    $('#tableIndexLineasNegocio').on('click-row.bs.table', (row, element, field) => {
        Swal.fire({
            title: `${element.name}`,
            showConfirmButton:false,
            allowOutsideClick: false,
            allowEscapeKey: false,
            showCloseButton: true,
            closeButtonHtml: '<i class="fas fa-times"></i>',
            html:`
                <div class="form-row margTop40">
                    <div class="form-group col">
                        <a onclick="btnDetails({'id':'${element.id}'})" class="btn btn-success float" data-toggle="tooltip" data-placement="bottom" title="Detalles" data-original-title="Tooltip on bottom"><i class="fas fa-search"></i></a>
                        <label class="d-block margTop5px">Detalles</label>
                    </div>
                    <div class="form-group col">
                        <a onclick="btnEdit({'id':'${element.id}', 'name':'${element.name}'})" class="btn btn-success float" data-toggle="tooltip" data-placement="bottom" title="Editar" data-original-title="Tooltip on bottom"><i class="fas fa-edit"></i></a>
                        <label class="d-block margTop5px">Editar</label>
                    </div>
                    <div class="form-group col">
                        <a onclick="btnDelete({'id':'${element.id}', 'name':'${element.name}'})" class="btn btn-success float" data-toggle="tooltip" data-placement="bottom" title="Eliminar" data-original-title="Tooltip on bottom"><i class="fas fa-trash"></i></a>
                        <label class="d-block margTop5px">Eliminar</label>
                    </div>
                </div>
            `
        });
    });

</script>
}
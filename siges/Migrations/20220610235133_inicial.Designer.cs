// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using siges.Data;

namespace siges.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220610235133_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("siges.Areas.Identity.Data.RoatechIdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int?>("dirId")
                        .HasColumnType("int");

                    b.Property<int?>("perId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("dirId");

                    b.HasIndex("perId");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("siges.DTO.IndexListOSDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contrato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContratoTipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstatusServicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Folio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Servicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IndexListOSDTO");
                });

            modelBuilder.Entity("siges.Models.ActivoFijo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFactura")
                        .HasColumnType("datetime2");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroSerie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opcional1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opcional2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ActivoFijo");
                });

            modelBuilder.Entity("siges.Models.Administracion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FacturaFecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("FacturaFolio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAdministrativa")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrdenServicioId")
                        .HasColumnType("int");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Administracion");
                });

            modelBuilder.Entity("siges.Models.Bitacora", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Event")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Section")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Bitacora");
                });

            modelBuilder.Entity("siges.Models.BitacoraEstatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("A")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("De")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAdministrativa")
                        .HasColumnType("datetime2");

                    b.Property<string>("Folio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OsId")
                        .HasColumnType("int");

                    b.Property<int?>("QuienCambiaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OsId");

                    b.HasIndex("QuienCambiaId");

                    b.ToTable("BitacoraEstatus");
                });

            modelBuilder.Entity("siges.Models.BulkUploadTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Archivo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CreadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FechaAdministrativa")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SettingsId")
                        .HasColumnType("int");

                    b.Property<long>("TamanoArchivo")
                        .HasColumnType("bigint");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreadoPorId");

                    b.HasIndex("SettingsId");

                    b.ToTable("BulkUploadTemplate");
                });

            modelBuilder.Entity("siges.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<string>("Opcional1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opcional2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RFC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("siges.Models.ClienteIdentity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("CuentaUsuarioId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaAdministrativa")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("CuentaUsuarioId");

                    b.ToTable("ClienteIdentity");
                });

            modelBuilder.Entity("siges.Models.Comercial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaAdministrativa")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrdenServicioId")
                        .HasColumnType("int");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Comercial");
                });

            modelBuilder.Entity("siges.Models.ConciliacionActivoFijo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Folio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UbicacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UbicacionId");

                    b.ToTable("ConciliacionActivoFijo");
                });

            modelBuilder.Entity("siges.Models.ConciliacionInsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Folio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UbicacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UbicacionId");

                    b.ToTable("ConciliacionInsumo");
                });

            modelBuilder.Entity("siges.Models.ConfiguracionServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("ContratoId")
                        .HasColumnType("int");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<int?>("UbicacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ContratoId");

                    b.HasIndex("UbicacionId");

                    b.ToTable("ConfiguracionServicio");
                });

            modelBuilder.Entity("siges.Models.ContactoCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("CreadorPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Opcional1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opcional2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("CreadorPorId");

                    b.HasIndex("ModificadoPorId");

                    b.ToTable("ContactoCliente");
                });

            modelBuilder.Entity("siges.Models.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Opcional1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opcional2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServicioId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ServicioId");

                    b.ToTable("Contrato");
                });

            modelBuilder.Entity("siges.Models.DetalleActivoFijo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Arrendamiento")
                        .HasColumnType("bit");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EntradaActivoFijoId")
                        .HasColumnType("int");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<string>("NumeroSerie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReferenciaId")
                        .HasColumnType("int");

                    b.Property<string>("Unidad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EntradaActivoFijoId");

                    b.HasIndex("ReferenciaId");

                    b.ToTable("DetalleActivoFijo");
                });

            modelBuilder.Entity("siges.Models.DetalleConfiguracionServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConfiguracionServicioId")
                        .HasColumnType("int");

                    b.Property<decimal>("CostoServicio")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<int?>("LineaNegocioId")
                        .HasColumnType("int");

                    b.Property<int>("MaximoServicio")
                        .HasColumnType("int");

                    b.Property<int>("MinimoServicio")
                        .HasColumnType("int");

                    b.Property<string>("Opcional1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Opcional2")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioServicio")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("ServicioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConfiguracionServicioId");

                    b.HasIndex("LineaNegocioId");

                    b.HasIndex("ServicioId");

                    b.ToTable("DetalleConfiguracionServicio");
                });

            modelBuilder.Entity("siges.Models.DetalleInsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("ClaveInsumo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EntradaInsumoId")
                        .HasColumnType("int");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReferenciaId")
                        .HasColumnType("int");

                    b.Property<string>("Unidad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EntradaInsumoId");

                    b.HasIndex("ReferenciaId");

                    b.ToTable("DetalleInsumo");
                });

            modelBuilder.Entity("siges.Models.Direccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("calle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("colonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cp")
                        .HasColumnType("int");

                    b.Property<string>("entidadFederativa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estatus")
                        .HasColumnType("bit");

                    b.Property<string>("municipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Direccion");
                });

            modelBuilder.Entity("siges.Models.EntradaActivoFijo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaRecepcion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRemision")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Incidencia")
                        .HasColumnType("bit");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UbicacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UbicacionId");

                    b.ToTable("EntradaActivoFijo");
                });

            modelBuilder.Entity("siges.Models.EntradaInsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaPedido")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaRecepcion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Incidencia")
                        .HasColumnType("bit");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pedido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UbicacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UbicacionId");

                    b.ToTable("EntradaInsumo");
                });

            modelBuilder.Entity("siges.Models.EstructuraCustomVision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArchivoId")
                        .HasColumnType("int");

                    b.Property<float>("BoundingBoxHeight")
                        .HasColumnType("real");

                    b.Property<float>("BoundingBoxLeft")
                        .HasColumnType("real");

                    b.Property<float>("BoundingBoxTop")
                        .HasColumnType("real");

                    b.Property<float>("BoundingBoxWidth")
                        .HasColumnType("real");

                    b.Property<float>("Probability")
                        .HasColumnType("real");

                    b.Property<string>("TagId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TagName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArchivoId");

                    b.ToTable("EstructuraCustomVision");
                });

            modelBuilder.Entity("siges.Models.EstructuraExifBi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTimeOriginal")
                        .HasColumnType("datetime2");

                    b.Property<int>("DateTimeOriginalId")
                        .HasColumnType("int");

                    b.Property<float>("Distancia")
                        .HasColumnType("real");

                    b.Property<string>("GPSAltitudeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GPSAltitudeId")
                        .HasColumnType("int");

                    b.Property<string>("GPSAltitudeRefDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GPSAltitudeRefId")
                        .HasColumnType("int");

                    b.Property<int>("GPSAltitudeRefValue")
                        .HasColumnType("int");

                    b.Property<string>("GPSAltitudeValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPSLatitudeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GPSLatitudeId")
                        .HasColumnType("int");

                    b.Property<string>("GPSLatitudeRefDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GPSLatitudeRefId")
                        .HasColumnType("int");

                    b.Property<string>("GPSLatitudeRefValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPSLatitudeValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GPSLongitudeDescription")
                        .HasColumnType("float");

                    b.Property<int>("GPSLongitudeId")
                        .HasColumnType("int");

                    b.Property<string>("GPSLongitudeRefDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GPSLongitudeRefId")
                        .HasColumnType("int");

                    b.Property<string>("GPSLongitudeRefValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GPSLongitudeValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstructuraExifBi");
                });

            modelBuilder.Entity("siges.Models.Insumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opcional1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opcional2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Insumo");
                });

            modelBuilder.Entity("siges.Models.InventarioAF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActivoFijoId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivoFijoId");

                    b.HasIndex("PersonaId");

                    b.ToTable("InventarioAF");
                });

            modelBuilder.Entity("siges.Models.InventarioActivoFijo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActivoFijoId")
                        .HasColumnType("int");

                    b.Property<int>("Ajuste")
                        .HasColumnType("int");

                    b.Property<int?>("ConciliacionActivoFijoId")
                        .HasColumnType("int");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<int>("Fisico")
                        .HasColumnType("int");

                    b.Property<int>("Teorico")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivoFijoId");

                    b.HasIndex("ConciliacionActivoFijoId");

                    b.ToTable("InventarioActivoFijo");
                });

            modelBuilder.Entity("siges.Models.InventarioInsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Ajuste")
                        .HasColumnType("int");

                    b.Property<int?>("ConciliacionInsumoId")
                        .HasColumnType("int");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<int>("Fisico")
                        .HasColumnType("int");

                    b.Property<int?>("InsumoId")
                        .HasColumnType("int");

                    b.Property<int>("Teorico")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConciliacionInsumoId");

                    b.HasIndex("InsumoId");

                    b.ToTable("InventarioInsumo");
                });

            modelBuilder.Entity("siges.Models.Kit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaAdmin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreaId");

                    b.ToTable("Kit");
                });

            modelBuilder.Entity("siges.Models.KitInsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaAdministrativa")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InsumoId")
                        .HasColumnType("int");

                    b.Property<int?>("KitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InsumoId");

                    b.HasIndex("KitId");

                    b.ToTable("KitInsumo");
                });

            modelBuilder.Entity("siges.Models.LineaNegocio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opcional1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opcional2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LineaNegocio");
                });

            modelBuilder.Entity("siges.Models.Lote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Caducidad")
                        .HasColumnType("datetime2");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<int?>("InsumoId")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InsumoId");

                    b.HasIndex("PersonaId");

                    b.ToTable("Lote");
                });

            modelBuilder.Entity("siges.Models.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadorPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Opcional1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opcional2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreadorPorId");

                    b.HasIndex("ModificadoPorId");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("siges.Models.Operador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaAdministrativa")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Hora")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrdenServicioId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrdenServicioId");

                    b.HasIndex("PersonaId");

                    b.ToTable("Operador");
                });

            modelBuilder.Entity("siges.Models.Operador+Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComentarioNuevoEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NuevoEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OperadorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperadorId");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("siges.Models.Operador+Estado+Archivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomVisionResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EstadoId")
                        .HasColumnType("int");

                    b.Property<int?>("EstructuraExifId")
                        .HasColumnType("int");

                    b.Property<string>("Exif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExifBi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaceApiFinalResponse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("File")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("EstructuraExifId");

                    b.ToTable("Archivo");
                });

            modelBuilder.Entity("siges.Models.OrdenActivoFijo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActivoFijoId")
                        .HasColumnType("int");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<int?>("OrdenServicioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivoFijoId");

                    b.HasIndex("OrdenServicioId");

                    b.ToTable("OrdenActivoFijo");
                });

            modelBuilder.Entity("siges.Models.OrdenInsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caducidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<int?>("InsumoId")
                        .HasColumnType("int");

                    b.Property<string>("Lote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LoteTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("OrdenServicioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InsumoId");

                    b.HasIndex("LoteTypeId");

                    b.HasIndex("OrdenServicioId");

                    b.ToTable("OrdenInsumo");
                });

            modelBuilder.Entity("siges.Models.OrdenPersona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<int?>("OrdenServicioId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrdenServicioId");

                    b.HasIndex("PersonaId");

                    b.ToTable("OrdenPersona");
                });

            modelBuilder.Entity("siges.Models.OrdenServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("ContactoAM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactoAP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactoEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactoTelefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContratoId")
                        .HasColumnType("int");

                    b.Property<string>("EmailCC1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailCC2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<string>("EstatusServicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAdministrativa")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Folio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LineaNegocioId")
                        .HasColumnType("int");

                    b.Property<string>("NombreCompletoCC1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCompletoCC2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opcional1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opcional2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opcional3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opcional4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonaComercialId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonaValidaId")
                        .HasColumnType("int");

                    b.Property<int?>("ServicioId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UbicacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ContratoId");

                    b.HasIndex("LineaNegocioId");

                    b.HasIndex("PersonaComercialId");

                    b.HasIndex("PersonaValidaId");

                    b.HasIndex("ServicioId");

                    b.HasIndex("UbicacionId");

                    b.ToTable("OrdenServicio");
                });

            modelBuilder.Entity("siges.Models.OsRecurrente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OsOrigenId")
                        .HasColumnType("int");

                    b.Property<string>("Periodo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OsRecurrente");
                });

            modelBuilder.Entity("siges.Models.OsRecurrente+Oses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OsId")
                        .HasColumnType("int");

                    b.Property<int?>("OsRecurrenteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OsRecurrenteId");

                    b.ToTable("Oses");
                });

            modelBuilder.Entity("siges.Models.Paquete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clasificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaAdmin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreaId");

                    b.ToTable("Paquete");
                });

            modelBuilder.Entity("siges.Models.PaqueteInsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<int?>("InsumoId")
                        .HasColumnType("int");

                    b.Property<int?>("PaqueteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InsumoId");

                    b.HasIndex("PaqueteId");

                    b.ToTable("PaqueteInsumo");
                });

            modelBuilder.Entity("siges.Models.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adscripcion")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("CURP")
                        .HasColumnType("nvarchar(18)")
                        .HasMaxLength(18);

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ClaveEmpleado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactoClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("DirId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntidadFederativa")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<int>("FaceApiCount")
                        .HasColumnType("int");

                    b.Property<string>("FaceApiId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Fotografia")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Materno")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Municipio")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Opcional1")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Opcional2")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Paterno")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.Property<string>("Puesto")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RFC")
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<decimal>("Sueldo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("TelefonoContacto")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContactoClienteId");

                    b.HasIndex("DirId");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("siges.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opcional1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opcional2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("siges.Models.SemaphoreParams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LlegadaAmarillo")
                        .HasColumnType("int");

                    b.Property<int>("LlegadaRojo")
                        .HasColumnType("int");

                    b.Property<int>("LlegadaVerde")
                        .HasColumnType("int");

                    b.Property<int>("SalidaAmarillo")
                        .HasColumnType("int");

                    b.Property<int>("SalidaRojo")
                        .HasColumnType("int");

                    b.Property<int>("SalidaVerde")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SemaphoreParams");
                });

            modelBuilder.Entity("siges.Models.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<int>("LineaNegocioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opcional1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opcional2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LineaNegocioId");

                    b.ToTable("Servicio");
                });

            modelBuilder.Entity("siges.Models.Settings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("AttachmentFile1")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("AttachmentFile1Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CustomVisionUso")
                        .HasColumnType("bit");

                    b.Property<bool>("EmailEnableSSL")
                        .HasColumnType("bit");

                    b.Property<string>("EmailHost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailPass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailPort")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FaceApiIterarRequestUntil90OrMore")
                        .HasColumnType("bit");

                    b.Property<bool>("FaceApiMantenerHistorico")
                        .HasColumnType("bit");

                    b.Property<int>("FaceApiMinCantEntrenamiento")
                        .HasColumnType("int");

                    b.Property<bool>("FaceApiUso")
                        .HasColumnType("bit");

                    b.Property<int>("FolioDigitsLong")
                        .HasColumnType("int");

                    b.Property<string>("FolioPrefix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxCaractersFields")
                        .HasColumnType("int");

                    b.Property<string>("MinimumDateCriteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemainingDaysToUpload")
                        .HasColumnType("int");

                    b.Property<bool>("SendAttachmentFile")
                        .HasColumnType("bit");

                    b.Property<bool>("UsoDeKits")
                        .HasColumnType("bit");

                    b.Property<bool>("UsoDePaquetes")
                        .HasColumnType("bit");

                    b.Property<bool>("ValidateMinimumDate")
                        .HasColumnType("bit");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("siges.Models.TipoProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreadorPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModificadoPorId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Opcional1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opcional2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreadorPorId");

                    b.HasIndex("ModificadoPorId");

                    b.ToTable("TipoProducto");
                });

            modelBuilder.Entity("siges.Models.TraspasoActivoFijo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("datetime2");

                    b.Property<string>("Folio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotivoSalida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumGuia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Paqueteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UbicacionDestinoId")
                        .HasColumnType("int");

                    b.Property<int?>("UbicacionOrigenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UbicacionDestinoId");

                    b.HasIndex("UbicacionOrigenId");

                    b.ToTable("TraspasoActivoFijo");
                });

            modelBuilder.Entity("siges.Models.TraspasoDetalleActivoFijo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActivoFijoId")
                        .HasColumnType("int");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<int?>("TraspasoActivoFijoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActivoFijoId");

                    b.HasIndex("TraspasoActivoFijoId");

                    b.ToTable("TraspasoDetalleActivoFijo");
                });

            modelBuilder.Entity("siges.Models.TraspasoDetalleInsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<int?>("InsumoId")
                        .HasColumnType("int");

                    b.Property<int?>("TraspasoInsumoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InsumoId");

                    b.HasIndex("TraspasoInsumoId");

                    b.ToTable("TraspasoDetalleInsumo");
                });

            modelBuilder.Entity("siges.Models.TraspasoInsumo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("datetime2");

                    b.Property<string>("Folio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotivoSalida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumGuia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Paqueteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UbicacionDestinoId")
                        .HasColumnType("int");

                    b.Property<int?>("UbicacionOrigenId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UbicacionDestinoId");

                    b.HasIndex("UbicacionOrigenId");

                    b.ToTable("TraspasoInsumo");
                });

            modelBuilder.Entity("siges.Models.Ubicacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Contacto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactoEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactoOpcional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactoOpcionalEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactoOpcionalTelefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactoTelefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Distancia")
                        .HasColumnType("real");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Ubicacion");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("siges.Areas.Identity.Data.RoatechIdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("siges.Areas.Identity.Data.RoatechIdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("siges.Areas.Identity.Data.RoatechIdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("siges.Areas.Identity.Data.RoatechIdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("siges.Areas.Identity.Data.RoatechIdentityUser", b =>
                {
                    b.HasOne("siges.Models.Direccion", "dir")
                        .WithMany()
                        .HasForeignKey("dirId");

                    b.HasOne("siges.Models.Persona", "per")
                        .WithMany()
                        .HasForeignKey("perId");
                });

            modelBuilder.Entity("siges.Models.BitacoraEstatus", b =>
                {
                    b.HasOne("siges.Models.OrdenServicio", "Os")
                        .WithMany()
                        .HasForeignKey("OsId");

                    b.HasOne("siges.Models.Persona", "QuienCambia")
                        .WithMany()
                        .HasForeignKey("QuienCambiaId");
                });

            modelBuilder.Entity("siges.Models.BulkUploadTemplate", b =>
                {
                    b.HasOne("siges.Areas.Identity.Data.RoatechIdentityUser", "CreadoPor")
                        .WithMany()
                        .HasForeignKey("CreadoPorId");

                    b.HasOne("siges.Models.Settings", null)
                        .WithMany("Templates")
                        .HasForeignKey("SettingsId");
                });

            modelBuilder.Entity("siges.Models.ClienteIdentity", b =>
                {
                    b.HasOne("siges.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("siges.Areas.Identity.Data.RoatechIdentityUser", "CuentaUsuario")
                        .WithMany()
                        .HasForeignKey("CuentaUsuarioId");
                });

            modelBuilder.Entity("siges.Models.ConciliacionActivoFijo", b =>
                {
                    b.HasOne("siges.Models.Ubicacion", "Ubicacion")
                        .WithMany()
                        .HasForeignKey("UbicacionId");
                });

            modelBuilder.Entity("siges.Models.ConciliacionInsumo", b =>
                {
                    b.HasOne("siges.Models.Ubicacion", "Ubicacion")
                        .WithMany()
                        .HasForeignKey("UbicacionId");
                });

            modelBuilder.Entity("siges.Models.ConfiguracionServicio", b =>
                {
                    b.HasOne("siges.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("siges.Models.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId");

                    b.HasOne("siges.Models.Ubicacion", "Ubicacion")
                        .WithMany()
                        .HasForeignKey("UbicacionId");
                });

            modelBuilder.Entity("siges.Models.ContactoCliente", b =>
                {
                    b.HasOne("siges.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("siges.Areas.Identity.Data.RoatechIdentityUser", "CreadorPor")
                        .WithMany()
                        .HasForeignKey("CreadorPorId");

                    b.HasOne("siges.Areas.Identity.Data.RoatechIdentityUser", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");
                });

            modelBuilder.Entity("siges.Models.Contrato", b =>
                {
                    b.HasOne("siges.Models.Cliente", "Cliente")
                        .WithMany("Contratos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("siges.Models.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("siges.Models.DetalleActivoFijo", b =>
                {
                    b.HasOne("siges.Models.EntradaActivoFijo", null)
                        .WithMany("Desglose")
                        .HasForeignKey("EntradaActivoFijoId");

                    b.HasOne("siges.Models.ActivoFijo", "Referencia")
                        .WithMany()
                        .HasForeignKey("ReferenciaId");
                });

            modelBuilder.Entity("siges.Models.DetalleConfiguracionServicio", b =>
                {
                    b.HasOne("siges.Models.ConfiguracionServicio", null)
                        .WithMany("Detalle")
                        .HasForeignKey("ConfiguracionServicioId");

                    b.HasOne("siges.Models.LineaNegocio", "LineaNegocio")
                        .WithMany()
                        .HasForeignKey("LineaNegocioId");

                    b.HasOne("siges.Models.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId");
                });

            modelBuilder.Entity("siges.Models.DetalleInsumo", b =>
                {
                    b.HasOne("siges.Models.EntradaInsumo", null)
                        .WithMany("Desglose")
                        .HasForeignKey("EntradaInsumoId");

                    b.HasOne("siges.Models.Insumo", "Referencia")
                        .WithMany()
                        .HasForeignKey("ReferenciaId");
                });

            modelBuilder.Entity("siges.Models.EntradaActivoFijo", b =>
                {
                    b.HasOne("siges.Models.Ubicacion", "Ubicacion")
                        .WithMany()
                        .HasForeignKey("UbicacionId");
                });

            modelBuilder.Entity("siges.Models.EntradaInsumo", b =>
                {
                    b.HasOne("siges.Models.Ubicacion", "Ubicacion")
                        .WithMany()
                        .HasForeignKey("UbicacionId");
                });

            modelBuilder.Entity("siges.Models.EstructuraCustomVision", b =>
                {
                    b.HasOne("siges.Models.Operador+Estado+Archivo", null)
                        .WithMany("EstructuraCustomVisionResult")
                        .HasForeignKey("ArchivoId");
                });

            modelBuilder.Entity("siges.Models.InventarioAF", b =>
                {
                    b.HasOne("siges.Models.ActivoFijo", "ActivoFijo")
                        .WithMany()
                        .HasForeignKey("ActivoFijoId");

                    b.HasOne("siges.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId");
                });

            modelBuilder.Entity("siges.Models.InventarioActivoFijo", b =>
                {
                    b.HasOne("siges.Models.ActivoFijo", "ActivoFijo")
                        .WithMany()
                        .HasForeignKey("ActivoFijoId");

                    b.HasOne("siges.Models.ConciliacionActivoFijo", null)
                        .WithMany("Detalle")
                        .HasForeignKey("ConciliacionActivoFijoId");
                });

            modelBuilder.Entity("siges.Models.InventarioInsumo", b =>
                {
                    b.HasOne("siges.Models.ConciliacionInsumo", null)
                        .WithMany("Detalle")
                        .HasForeignKey("ConciliacionInsumoId");

                    b.HasOne("siges.Models.Insumo", "Insumo")
                        .WithMany()
                        .HasForeignKey("InsumoId");
                });

            modelBuilder.Entity("siges.Models.Kit", b =>
                {
                    b.HasOne("siges.Models.Persona", "Crea")
                        .WithMany()
                        .HasForeignKey("CreaId");
                });

            modelBuilder.Entity("siges.Models.KitInsumo", b =>
                {
                    b.HasOne("siges.Models.Insumo", "Insumo")
                        .WithMany()
                        .HasForeignKey("InsumoId");

                    b.HasOne("siges.Models.Kit", "Kit")
                        .WithMany()
                        .HasForeignKey("KitId");
                });

            modelBuilder.Entity("siges.Models.Lote", b =>
                {
                    b.HasOne("siges.Models.Insumo", "Insumo")
                        .WithMany()
                        .HasForeignKey("InsumoId");

                    b.HasOne("siges.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId");
                });

            modelBuilder.Entity("siges.Models.Marca", b =>
                {
                    b.HasOne("siges.Areas.Identity.Data.RoatechIdentityUser", "CreadorPor")
                        .WithMany()
                        .HasForeignKey("CreadorPorId");

                    b.HasOne("siges.Areas.Identity.Data.RoatechIdentityUser", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");
                });

            modelBuilder.Entity("siges.Models.Operador", b =>
                {
                    b.HasOne("siges.Models.OrdenServicio", "OrdenServicio")
                        .WithMany()
                        .HasForeignKey("OrdenServicioId");

                    b.HasOne("siges.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId");
                });

            modelBuilder.Entity("siges.Models.Operador+Estado", b =>
                {
                    b.HasOne("siges.Models.Operador", null)
                        .WithMany("EstadoN")
                        .HasForeignKey("OperadorId");
                });

            modelBuilder.Entity("siges.Models.Operador+Estado+Archivo", b =>
                {
                    b.HasOne("siges.Models.Operador+Estado", null)
                        .WithMany("ArchivosEvidencia")
                        .HasForeignKey("EstadoId");

                    b.HasOne("siges.Models.EstructuraExifBi", "EstructuraExif")
                        .WithMany()
                        .HasForeignKey("EstructuraExifId");
                });

            modelBuilder.Entity("siges.Models.OrdenActivoFijo", b =>
                {
                    b.HasOne("siges.Models.ActivoFijo", "ActivoFijo")
                        .WithMany()
                        .HasForeignKey("ActivoFijoId");

                    b.HasOne("siges.Models.OrdenServicio", "OrdenServicio")
                        .WithMany("Activos")
                        .HasForeignKey("OrdenServicioId");
                });

            modelBuilder.Entity("siges.Models.OrdenInsumo", b =>
                {
                    b.HasOne("siges.Models.Insumo", "Insumo")
                        .WithMany()
                        .HasForeignKey("InsumoId");

                    b.HasOne("siges.Models.Lote", "LoteType")
                        .WithMany()
                        .HasForeignKey("LoteTypeId");

                    b.HasOne("siges.Models.OrdenServicio", "OrdenServicio")
                        .WithMany("Insumos")
                        .HasForeignKey("OrdenServicioId");
                });

            modelBuilder.Entity("siges.Models.OrdenPersona", b =>
                {
                    b.HasOne("siges.Models.OrdenServicio", "OrdenServicio")
                        .WithMany("Personal")
                        .HasForeignKey("OrdenServicioId");

                    b.HasOne("siges.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("PersonaId");
                });

            modelBuilder.Entity("siges.Models.OrdenServicio", b =>
                {
                    b.HasOne("siges.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("siges.Models.Contrato", "Contrato")
                        .WithMany()
                        .HasForeignKey("ContratoId");

                    b.HasOne("siges.Models.LineaNegocio", "LineaNegocio")
                        .WithMany()
                        .HasForeignKey("LineaNegocioId");

                    b.HasOne("siges.Models.Persona", "PersonaComercial")
                        .WithMany()
                        .HasForeignKey("PersonaComercialId");

                    b.HasOne("siges.Models.Persona", "PersonaValida")
                        .WithMany()
                        .HasForeignKey("PersonaValidaId");

                    b.HasOne("siges.Models.Servicio", "Servicio")
                        .WithMany()
                        .HasForeignKey("ServicioId");

                    b.HasOne("siges.Models.Ubicacion", "Ubicacion")
                        .WithMany()
                        .HasForeignKey("UbicacionId");
                });

            modelBuilder.Entity("siges.Models.OsRecurrente+Oses", b =>
                {
                    b.HasOne("siges.Models.OsRecurrente", null)
                        .WithMany("OsRecurrentesIds")
                        .HasForeignKey("OsRecurrenteId");
                });

            modelBuilder.Entity("siges.Models.Paquete", b =>
                {
                    b.HasOne("siges.Models.Persona", "Crea")
                        .WithMany()
                        .HasForeignKey("CreaId");
                });

            modelBuilder.Entity("siges.Models.PaqueteInsumo", b =>
                {
                    b.HasOne("siges.Models.Insumo", "Insumo")
                        .WithMany()
                        .HasForeignKey("InsumoId");

                    b.HasOne("siges.Models.Paquete", "Paquete")
                        .WithMany()
                        .HasForeignKey("PaqueteId");
                });

            modelBuilder.Entity("siges.Models.Persona", b =>
                {
                    b.HasOne("siges.Models.ContactoCliente", null)
                        .WithMany("Contactos")
                        .HasForeignKey("ContactoClienteId");

                    b.HasOne("siges.Models.Direccion", "Dir")
                        .WithMany()
                        .HasForeignKey("DirId");
                });

            modelBuilder.Entity("siges.Models.Servicio", b =>
                {
                    b.HasOne("siges.Models.LineaNegocio", "LineaNegocio")
                        .WithMany()
                        .HasForeignKey("LineaNegocioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("siges.Models.TipoProducto", b =>
                {
                    b.HasOne("siges.Areas.Identity.Data.RoatechIdentityUser", "CreadorPor")
                        .WithMany()
                        .HasForeignKey("CreadorPorId");

                    b.HasOne("siges.Areas.Identity.Data.RoatechIdentityUser", "ModificadoPor")
                        .WithMany()
                        .HasForeignKey("ModificadoPorId");
                });

            modelBuilder.Entity("siges.Models.TraspasoActivoFijo", b =>
                {
                    b.HasOne("siges.Models.Ubicacion", "UbicacionDestino")
                        .WithMany()
                        .HasForeignKey("UbicacionDestinoId");

                    b.HasOne("siges.Models.Ubicacion", "UbicacionOrigen")
                        .WithMany()
                        .HasForeignKey("UbicacionOrigenId");
                });

            modelBuilder.Entity("siges.Models.TraspasoDetalleActivoFijo", b =>
                {
                    b.HasOne("siges.Models.ActivoFijo", "ActivoFijo")
                        .WithMany()
                        .HasForeignKey("ActivoFijoId");

                    b.HasOne("siges.Models.TraspasoActivoFijo", null)
                        .WithMany("Detalle")
                        .HasForeignKey("TraspasoActivoFijoId");
                });

            modelBuilder.Entity("siges.Models.TraspasoDetalleInsumo", b =>
                {
                    b.HasOne("siges.Models.Insumo", "Insumo")
                        .WithMany()
                        .HasForeignKey("InsumoId");

                    b.HasOne("siges.Models.TraspasoInsumo", null)
                        .WithMany("Detalle")
                        .HasForeignKey("TraspasoInsumoId");
                });

            modelBuilder.Entity("siges.Models.TraspasoInsumo", b =>
                {
                    b.HasOne("siges.Models.Ubicacion", "UbicacionDestino")
                        .WithMany()
                        .HasForeignKey("UbicacionDestinoId");

                    b.HasOne("siges.Models.Ubicacion", "UbicacionOrigen")
                        .WithMany()
                        .HasForeignKey("UbicacionOrigenId");
                });

            modelBuilder.Entity("siges.Models.Ubicacion", b =>
                {
                    b.HasOne("siges.Models.Cliente", "Cliente")
                        .WithMany("Ubicaciones")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
